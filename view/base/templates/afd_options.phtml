<?php if ($block->getConfig('typeahead/advanced/polyfill') == 1) { ?>
    <script crossorigin="anonymous" src="https://polyfill.io/v3/polyfill.min.js?flags=gated&features=Promise"></script>
<?php } ?>
<script>

    var countryMap = {
        'ALB': 'AL',
        'ARG': 'AR',
        'AUT': 'AT',
        'AUS': 'AU',
        'BEL': 'BE',
        'BGR': 'BG',
        'BOL': 'BL',
        'BRA': 'BR',
        'CAN': 'CA',
        'CHE': 'CH',
        'CHL': 'CL',
        'CHN': 'CN',
        'COL' :'CO',
        'DEU': 'DE',
        'DNK': 'DK',
        'ECU': 'EC',
        'EST': 'EE',
        'ESP': 'ES',
        'FIN': 'FI',
        'FRA': 'FR',
        'GRC': 'GR',
        'GUY': 'GY',
        'HRV': 'HR',
        'IND': 'IN',
        'ISL': 'IS',
        'ITA': 'IT',
        'LTU': 'LT',
        'LVA': 'LV',
        'MEX': 'MX',
        'PER': 'PE',
        'POL': 'PL',
        'PRT': 'PT',
        'PRY': 'PY',
        'ROU': 'RO',
        'SWE': 'SE',
        'SUR': 'SR',
        'URY': 'UY',
        'USA': 'US',
        'VEN': 'VE'
    };

    var regions = <?= /* @noEscape */ $this->helper(\Magento\Directory\Helper\Data::class)->getRegionJson() ?>;

    const selectRegionCountries = Object.entries(regions).filter(function(region){
        return region[0] !== 'config'
    }).map(function(region){
        return region[0]
    })

    var regionMap = function (result) {

        if (typeof countryMap[result.CountryISO] === 'undefined') {
            return null;
        }

        var mappedCountry = countryMap[result.CountryISO];

        var val = '';
        for (var regionIndex in regions[mappedCountry]) {
            if (regions[mappedCountry][regionIndex].code === result.TraditionalCounty) {
                val = regionIndex;
                break;
            }
            if(mappedCountry === 'CN' && regions[mappedCountry][regionIndex].name.match(result.TraditionalCounty)) {
                val = regionIndex;
            }
        }

        return val;

    };

    var afdOptions = {
        platformVersion: 'mag010609',
        typeahead: {
            maxItems: '<?php echo $block->getConfig('typeahead/quantity/maxItems');?>',
            pushUp: true,
            afterHideTypeahead: '<?php echo $block->getConfig('typeahead/fields/afterHideTypeahead');?>' === '1',
            searchAgain: '<?php echo $block->getConfig('typeahead/fields/enableSearchAgainButton');?>' === '1',
            afterClearTypeahead: '<?php echo $block->getConfig('typeahead/fields/afterClearTypeahead');?>' === '1',
            beforeHideResults: '<?php echo $block->getConfig('typeahead/fields/beforeHideResults');?>' === '1',
            fewResultsManualInput: '<?php echo $block->getConfig('typeahead/quantity/enableFewItemsText');?>' === '1',
            fewResultsManualInputText: '<?php echo $block->escapeHtml($block->getConfig('typeahead/quantity/fewItemsText'));?>',
            notEmptyShowResults: true,
            parentClass: 'field',
            fieldSets: ['fieldset.street', 'fieldset [data-index="street"], .admin__field.field-street'],
            hideEmpties: '<?php echo $block->getConfig('typeahead/fields/hideEmpties');?>' === '1',
            manualInputButton: '<?php echo $block->getConfig('typeahead/fields/enableManualEntryButton');?>' === '1',
            containers: ['#order-billing_address', '#order-shipping_address', '.customer_form_areas_address_address_customer_address_update_modal', '.form-address-edit'],
            matchPositions: '<?php echo $block->getConfig('typeahead/fields/highlightMatches');?>' === '1',
            postcodeFirst: '<?php echo $block->getConfig('typeahead/fields/postcodeFirst');?>' === '1',
            showForCountries: '<?php echo $block->getConfig('typeahead/countries/typeaheadCountries');?>'.split(','),
            containerOnlyContainsControl: false,
            regionMap: regionMap,
            afterRetrieveHideResultsList: true
        },
        country: {
            customCountryControl: '[name="country_id"], .form-address-edit #country, #order-billing_address_country_id, #order-shipping_address_country_id'
        },
        phone: {
            defaultDialingCode: '<?php echo $block->getConfig('phone/fields/dialingCode');?>',
            loadingSpinner: '.control',
            countryControl: '[name="country_id"]'
        },
        email: {
            loadingSpinner: '.field',
            task: '<?php echo $block->getConfig('email/fields/emailTask');?>'
        },
        reverseGeocode: {
            containers: ['.form-shipping-address', '.billing-address-form', '.form-address-edit']
        }
    };

    <?php if($block->getConfig('general/account/method') == "id"){; ?>
    afdOptions.pceUrl = '<?php echo $block->getConfig('general/account/idPceUrl'); ?>';
    afdOptions.id = '<?php echo $block->getConfig('general/account/id'); ?>';
    afdOptions.token = '<?php echo $block->getConfig('general/account/token'); ?>';
    <?php } else { ?>
    afdOptions.pceUrl = '<?php echo $block->getConfig('general/account/serialPceUrl'); ?>';
    afdOptions.serial = '<?php echo $block->getConfig('general/account/serial'); ?>';
    afdOptions.password = '<?php echo $block->getConfig('general/account/password'); ?>';
    <?php } ?>
    var hideStateCountries = '<?php echo $block->getConfig('typeahead/fields/hideRegion');?>'.split(',');
    // custom options that are needed in some parts of the application where templates cannot access back end config
    afdOptions.magentoOptions = {
        typeahead: {
            adminEditCustomerEnabled:   <?php echo $block->getConfig('typeahead/forms/adminCustomer'); ?> === 1,
            adminCreateOrderEnabled:   <?php echo $block->getConfig('typeahead/forms/adminOrder'); ?> === 1,
            zipPlusFour:   <?php echo $block->getConfig('typeahead/fields/zipPlusFour'); ?> === 1,
            customCountryDefaultID: '<?php echo $block->getConfig('general/account/id'); ?>',
            customCountryDefaultToken: '<?php echo $block->getConfig('general/account/token'); ?>',
            customCountryCredentials: <?php echo $block->getConfig('typeahead/advanced/customCountryCredentials'); ?> === 1,
            customCountryCredentialsUK: <?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsUK'); ?> === 1,
            customCountryCredentialsUS: <?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsUS'); ?> === 1,
            customCountryCredentialsIE: <?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsIE'); ?> === 1,
            customCountryCredentialsUKID: '<?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsUKID'); ?>',
            customCountryCredentialsUKToken: '<?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsUKToken'); ?>',
            customCountryCredentialsUSID: '<?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsUSID'); ?>',
            customCountryCredentialsUSToken: '<?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsUSToken'); ?>',
            customCountryCredentialsIEID: '<?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsIEID'); ?>',
            customCountryCredentialsIEToken: '<?php echo $block->getConfig('typeahead/advanced/customCountryCredentialsIEToken'); ?>'
    },
    email: {
        emailEnabled: <?php echo $block->getConfig('email/enable/enable'); ?> ===
        1,
            accountChangeEmailEnabled
    : <?php echo $block->getConfig('email/forms/account'); ?> ===
        1,
            loggedOutCheckoutEnabled
    : <?php echo $block->getConfig('email/forms/checkout'); ?> ===
        1,
            adminEditCustomerEnabled
    :   <?php echo $block->getConfig('email/forms/adminCustomer'); ?> ===
        1
    }
    ,
    phone: {
        phoneEnabled: <?php echo $block->getConfig('phone/enable/enable'); ?> ===
        1,
            loggedOutCheckoutEnabled
    : <?php echo $block->getConfig('phone/forms/checkout'); ?> ===
        1,
            invalidMessage
    :
        '<?php echo $block->getConfig("phone/fields/msg"); ?>',
            adminEditCustomerEnabled
    :   <?php echo $block->getConfig('phone/forms/adminCustomer'); ?> ===
        1,
            adminCreateOrderEnabled
    :   <?php echo $block->getConfig('phone/forms/adminOrder'); ?> ===
        1
    }
    ,
    version: '<?php echo $block->getMageVersion() ?>'

    }
</script>

<style>
    .afd-error {
        display: none;
    }


    .control.loading {
        position: relative
    }

    .field .control:before {
        border-color: rgba(0, 0, 0, 0.35);
    }

    .field .control.loading:before, .field .control.loading:after {
        transition: all 0s linear, opacity 0.2s ease;
        position: absolute;
        z-index: 3;
        content: "";
        top: 50%;
        right: 0.55em;
        margin-top: -0.675rem;
        width: 1.35rem;
        height: 1.35rem;
        box-sizing: border-box;
        border-radius: 500rem;
        border-style: solid;
        border-width: 0.1em;
    }

    .field .control._with-tooltip:before, .field .control._with-tooltip:after {
        right: 3.3em;
    }

    #shipping #customer-email-fieldset .control:before, #shipping #customer-email-fieldset .control:after {
        top: 25%;
    }

    .field .control:after {
        animation: button-spin 0.6s linear;
        animation-iteration-count: infinite;
        border-color: #fff transparent transparent;
        box-shadow: 0 0 0 1px transparent;
    }

    .afd-error {
        display: none;
        color: #e02b27;
        font-size: 1.2rem;
        margin-top: 7px;

    }

    .afd-invalid + .afd-error {
        display: block;
    }

    input.afd-invalid {
        border-color: #ed8380;
    }

    .afd-loading > :before, .afd-loading > :after {
        top: 32px;
        right: 48px;
    }

</style>